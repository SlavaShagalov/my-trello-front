version: "3.9"

services:
  # === Storages ===

  db:
    image: postgres
    container_name: trello_db
    restart: always
    environment:
      POSTGRES_DB: "trello_db"
      POSTGRES_USER: "moderator"
      POSTGRES_PASSWORD: "2222"
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - ./scripts/migrations/schema.sql:/docker-entrypoint-initdb.d/1.sql
      - ./scripts/migrations/init_data.sql:/docker-entrypoint-initdb.d/2.sql
    ports:
      - "5432:5432"
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  sessions-db:
    image: redis:alpine3.18
    container_name: trello_sessions
    restart: always
    environment:
      REDIS_PASSWORD: "1234"
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  # === Services ===

  api-main:
    image: trello_api
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: trello_api_main
    ports:
      - "8000:8000"
    depends_on:
      - db
      - sessions-db
    volumes:
      - ./cmd/api/logs:/logs
      - ./configs/api_main.yaml:/configs/api.yaml
      - ./.aws:/root/.aws
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  api-read-1:
    image: trello_api
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: trello_api_r1
    ports:
      - "8001:8001"
    depends_on:
      - db
      - sessions-db
    volumes:
      - ./cmd/api/logs:/logs
      - ./configs/api_read_1.yaml:/configs/api.yaml
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  api-read-2:
    image: trello_api
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: trello_api_r2
    ports:
      - "8002:8002"
    depends_on:
      - db
      - sessions-db
    volumes:
      - ./cmd/api/logs:/logs
      - ./configs/api_read_2.yaml:/configs/api.yaml
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  api-mirror:
    image: trello_api
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: trello_api_mirror
    ports:
      - "8003:8003"
    depends_on:
      - db
      - sessions-db
    volumes:
      - ./cmd/api/logs:/logs
      - ./configs/api_mirror.yaml:/configs/api.yaml
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  balancer:
    image: trello_balancer
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: trello_balancer
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/my_trello.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - api-main
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  ds-admin:
    image: dpage/pgadmin4:latest
    container_name: trello_ds_admin
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@vk.com
      PGADMIN_DEFAULT_PASSWORD: 1234
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  # === Test ===

  test:
    image: trello_test
    build:
      context: .
      dockerfile: ./tests/Dockerfile
    container_name: trello_test
    depends_on:
      - test-db
      - test-sessions-db
    volumes:
      - ./tests/logs:/logs
      - ./tests/allure-results:/src/allure-results
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  test-db:
    image: postgres
    container_name: trello_test_db
    restart: always
    environment:
      POSTGRES_DB: "trello_db"
      POSTGRES_USER: "moderator"
      POSTGRES_PASSWORD: "2222"
    volumes:
      - ./scripts/migrations/schema.sql:/docker-entrypoint-initdb.d/1.sql
      - ./scripts/migrations/test_data.sql:/docker-entrypoint-initdb.d/2.sql
    ports:
      - "5432:5432"
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  test-sessions-db:
    image: redis:alpine3.18
    container_name: trello_test_sessions_db
    restart: always
    environment:
      REDIS_PASSWORD: "1234"
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  test-api:
    image: trello_test_api
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: trello_test_api
    ports:
      - "8000:8000"
    depends_on:
      - test-db
      - test-sessions-db
    volumes:
      - ./cmd/api/logs:/logs
      - ./configs/api_test.yaml:/configs/api.yaml
      - ./.aws:/root/.aws
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

networks:
  trello-network:
    name: trello_network
    driver: bridge
